from aspen import Response
from gittip.models.community import name_pattern, slugize, Community

[----------------------]

if not GET:
    # Method not allowed
    raise Response(405)

_slug = path['slug']
if name_pattern.match(_slug) is None:
    raise Response(404)
slug = slugize(_slug)

community = Community.from_slug(slug)

if not community:
    # Community not found
    raise Response(404)

try:
    limit = min(int(qs.get('limit', 10)), 100)
    offset = int(qs.get('offset', 0))
except ValueError:
    raise Response(400)

community_members = community.get_members(limit=limit, offset=offset)

[---] application/json via json_dump
{ "name": community.name
, "slug": community.slug
, "total": community.nmembers
, "members": [p.to_dict() for p in community_members]
 }
